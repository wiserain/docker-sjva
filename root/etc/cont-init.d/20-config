#!/usr/bin/with-contenv bash
set -e

cd "${SJVA_HOME}"

# install and update SJVA
if [ -d "${SJVA_HOME}/.git" ] && [ ! -f "${SJVA_HOME}/.noupdate" ]; then
  find "${SJVA_HOME}" -name "index.lock" -exec rm -f '{}' \;
  git reset --quiet --hard HEAD
  echo "*** checking for updates..."
  git pull origin main --allow-unrelated-histories --rebase
else
  echo "*** installing SJVA to '${SJVA_HOME}'..."
  git init --quiet > /dev/null
  git remote add origin "https://github.com/soju6jan/SJVA3.git"
  git pull --quiet origin main --depth 1
fi

plugin_root="${SJVA_HOME}/data/custom"
if [ "${PLUGIN_UPDATE_FROM_PYTHON}" = "false" ] && [ -d "${plugin_root}" ]; then
  prune_paths=$(find "${plugin_root}" -name .noupdate -printf "-path %h -o ")
  find "${plugin_root}" -name "index.lock" -exec rm -f {} \;
  while read -r n; do
    [ ! -d "${n}" ] && continue
    if [ "$(git -C "${n}" rev-parse --is-inside-work-tree 2> /dev/null)" != "true" ]; then
      continue
    fi
    echo "*** checking for plugin update: $(basename "${n}")"
    git -C "${n}" reset --quiet --hard HEAD
    RESP=$(git -C "${n}" pull 2>&1 |tee /dev/null; exit ${PIPESTATUS[0]})
    if ! echo "$RESP" | grep -q "up to date"; then echo -e "$RESP" | ( TAB=$'    ' ; sed "s/^/$TAB/" ); fi
  done <<<$(find "${plugin_root}" -maxdepth 1 -mindepth 1 -type d \( $prune_paths -false \) -prune -o -type d -print)
fi

# permissions
chown -R abc:abc \
  "${SJVA_HOME}"

# really necessary?
# chmod 777 .
